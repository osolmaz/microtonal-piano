{"version":3,"sources":["Header.js","Footer.js","../../src/MidiNumbers.js","../../src/Key.js","../../src/Keyboard.js","../../src/ControlledPiano.js","../../src/Piano.js","../../src/KeyboardShortcuts.js","DimensionsProvider.js","InstrumentListProvider.js","SoundfontProvider.js","PianoConfig.js","audioContext.js","audio/Oscillator.js","noteHelpers.js","InteractiveDemo.js","PlaybackDemo.js","songs.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","style","background","className","target","href","Footer","props","role","aria-label","BASE_MIDI_NOTE_NUMBER","A440","SORTED_PITCHES","ACCIDENTAL_PITCHES","PITCH_INDEXES","C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B","MIDI_NUMBER_C0","MIN_MIDI_NUMBER","MAX_MIDI_NUMBER","NOTE_REGEX","NOTES_IN_OCTAVE","midiNumberAttributesCache","cache","midiNumber","pitchIndex","octave","Math","pitchName","note","isAccidental","buildMidiNumberAttributes","getAttributes","attrs","Error","NATURAL_MIDI_NUMBERS","getCentValueForNote","switchVal","tuning","midiDistance","nKey","key","getMidiNumberForNote","octaves","centValue","fromNote","match","letter","accidental","parseInt","getKeyIndexOctave","keyNumber","keyIndex","getFrequencyForNote","midi_number","tinygradient","getKeyColor","minVal","maxVal","color","active","neutralKeyColor","targetColor","targetInterval","Key","React","this","keys","MidiNumbers","noteRange","lastWidthRatio","getAbsoluteKeyPosition","last","switchValues","gliss","useTouchEvents","disabled","children","widthRatio","keyInfo","keyLeft","getRelativeKeyPosition","keyWidth","rangeTrackWidth","getTotalLength","left","ratioToPercentage","width","height","display","verticalAlign","step","min","max","values","onChange","s","renderMark","index","MAX","backgroundColor","direction","Direction","renderTrack","margin","marginBottom","borderRadius","boxShadow","onMouseDown","e","renderThumb","ref","switchRef","classNames","type","onMouseUp","onMouseEnter","onMouseLeave","onTouchStart","onTouchCancel","onTouchEnd","Component","ratio","PropTypes","naturalKeyWidth","onPlayNoteInput","onStopNoteInput","onSwitchChange","node","Keyboard","range","getMidiNumbers","filter","getHeight","map","isActive","isNaturalMidiNumber","value","propName","componentName","first","activeNotes","renderNoteLabel","keyWidthToHeight","number","ControlledPiano","newSwitchValues","num","prevActiveNotes","nextActiveNotes","notesStopped","difference","notesStarted","shortcut","sh","event","console","isMouseDown","keyboardShortcut","keyStep","centVal","freqVal","initialSwitchValues","window","prevProps","prevState","state","Object","playNote","stopNote","keyboardShortcuts","isRequired","equals","a","b","v","Piano","otherProps","controlledPiano","create","firstNote","lastNote","keyboardConfig","currentMidiNumber","naturalKeyIndex","BOTTOM_ROW","natural","flat","sharp","HOME_ROW","QWERTY_ROW","DOUBLE_ROW","DimensionsProvider","containerWidth","containerHeight","Dimensions","InstrumentListProvider","instrumentList","loadInstrumentList","fetch","hostname","soundfont","then","response","json","data","setState","render","defaultProps","SoundfontProvider","loadInstrument","instrumentName","instrument","Soundfont","audioContext","format","nameToUrl","name","resumeAudio","audioNode","play","activeAudioNodes","assign","stop","resume","Promise","resolve","stopAllNotes","forEach","onLoad","isLoading","AutoblurSelect","selectRef","current","blur","createRef","Label","PianoConfig","handleKeyDown","maxOffset","config","length","reducedOffset","keyboardShortcutOffset","setConfig","increasedOffset","onChangeFirstNote","onChangeLastNote","onChangeInstrument","onChangeShowSteps","showSteps","checked","onChangeShowCents","showCents","onChangeShowFrequencies","showFrequencies","onChangeTuning","tuningList","find","addEventListener","removeEventListener","midiNumbersToNotes","reduce","obj","tuningName","description","id","for","AudioContext","Oscillator","options","log","gainNode","createGain","gain","connect","destination","oscillators","freq","oscillator","createOscillator","frequency","start","disconnect","PIANO_KEYS","position","BAGLAMA_KEYS","TRADITIONAL_BAGLAMA_PITCHES","URMAVI_PITCHES","BAGLAMA_24TET_PITCHES","BAGLAMA_72TET_PITCHES","STEPS_72","STEPS_53","STEPS_106","TUNINGS","pitch","switchInterval","GAIN_VALUE","InteractiveDemo","KeyboardShortcuts","soundfontHostname","size","KARA_TOPRAK_SWITCHES","56","63","PlaybackDemo","setPlaying","isPlaying","activeNotesIndex","warn","playbackIntervalFn","piano","setInterval","song","clearInterval","onClick","hidden","YouTube","iframeClassName","videoId","opts","lostWoods","notes","karaToprak","webkitAudioContext","Installation","App","isLocalhost","Boolean","location","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","document","getElementById","URL","process","origin","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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AC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,GACA,GACA,GACA,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,GACA,GACA,GACA,IAGFA,GAAYA,GAAU3L,KAAI,SAAC4L,GAAD,OAAWA,EAAM5L,KAAI,SAACzG,GAAD,OAAUA,EAAO,SAEzD,IAAIsS,GAAa,CAEtB,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IAED,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IAED,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IAED,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GAGA,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GAGA,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,CAAC,IACD,CAAC,IACD,CAAC,IACD,GAEA,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,CAAC,IACD,CAAC,IACD,CAAC,IACD,GAEA,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IAED,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GAGA,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GAGA,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IAED,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IAED,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IAED,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GAGA,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IAED,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GAEA,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,CAAC,IACD,CAAC,IAED,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GAGA,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IAED,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GAEA,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,CAAC,IACD,CAAC,IAED,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GAGA,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GAEA,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,CAAC,IACD,CAAC,IACD,CAAC,IACD,GAEA,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,CAAC,IACD,CAAC,IAED,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IAGD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,CAAC,IACD,GACA,CAAC,IAED,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,CAAC,IACD,CAAC,IAED,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,CAAC,IACD,GACA,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IAED,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,CAAC,IACD,GACA,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,GAGA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IClZI7G,I,MAAe,IAAKnD,OAAOyG,cAAgBzG,OAAOiK,qBAGxD,SAASC,KACP,OACE,yBAAK5U,UAAU,eACb,6CACA,mHAC2F,6BAD3F,gH,IAqDS6U,G,iLAhCX,OACE,6BACE,kBAAC,EAAD,MACA,yBAAK7U,UAAU,aACb,yBAAKA,UAAU,8BAEX,kBAAC,GAAD,CAAiB6N,aAAcA,GAAcsF,kBAjCjC,2CAoChB,wBAAInT,UAAU,SACd,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OACb,kBAAC4U,GAAD,QAGJ,wBAAI5U,UAAU,SACd,yBAAKA,UAAU,YACb,yBAAKA,UAAU,wBACb,kBAAC,GAAD,CACE6N,aAAcA,GACdsF,kBA/CU,wCAgDVa,KAAMU,QAKd,kBAAC,EAAD,W,GA5BUlQ,IAAMwD,WC1BlB8M,GAAcC,QACW,cAA7BrK,OAAOsK,SAASjI,UAEe,UAA7BrC,OAAOsK,SAASjI,UAEhBrC,OAAOsK,SAASjI,SAAS1J,MAAM,2DAqCnC,SAAS4R,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTjI,MAAK,SAACqI,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3K,QACfsK,UAAUC,cAAcO,WAK1BxL,QAAQmH,IAAI,6CAKZnH,QAAQmH,IAAI,4CAMrBsE,OAAM,SAACC,GACN1L,QAAQ0L,MAAM,4CAA6CA,MCvEjEC,IAASxI,OAAO,kBAAC,GAAD,MAASyI,SAASC,eAAe,SDYlC,WACb,GAA6C,kBAAmBb,UAAW,CAGzE,GADkB,IAAIc,IAAIC,oBAAwBxL,OAAOsK,UAC3CmB,SAAWzL,OAAOsK,SAASmB,OAIvC,OAGFzL,OAAOgG,iBAAiB,QAAQ,WAC9B,IAAMwE,EAAK,UAAMgB,oBAAN,sBAEPpB,KAiDV,SAAiCI,GAE/BpI,MAAMoI,GACHjI,MAAK,SAACC,GAGiB,MAApBA,EAASkJ,SACuD,IAAhElJ,EAASmJ,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CpB,UAAUC,cAAcoB,MAAMvJ,MAAK,SAACqI,GAClCA,EAAamB,aAAaxJ,MAAK,WAC7BvC,OAAOsK,SAAS0B,eAKpBzB,GAAgBC,MAGnBU,OAAM,WACLzL,QAAQmH,IAAI,oEApEVqF,CAAwBzB,GAIxBC,UAAUC,cAAcoB,MAAMvJ,MAAK,WACjC9C,QAAQmH,IACN,gHAMJ2D,GAAgBC,OCvCxB0B,K","file":"static/js/main.ca091a48.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n  return (\n    <div style={{ background: '#333' }}>\n      <div className=\"container\">\n        <div className=\"text-sm-center text-white py-5\">\n          <h1>Microtonal Piano</h1>\n          <p>\n            A Digital Instrument Inspired by the{' '}\n            <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Qanun_(instrument)\">\n              Kanun\n            </a>\n          </p>\n          {/* <div className=\"mt-4\">\n            <a\n              className=\"btn btn-outline-light btn-lg\"\n              href=\"https://github.com/kevinsqi/react-piano\"\n            >\n              View docs on Github\n            </a>\n          </div> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction Footer(props) {\n  return (\n    <div className=\"bg-yellow mt-5 py-5\">\n      <div className=\"container\">\n        <div className=\"text-center text-secondary\">\n          Made with{' '}\n          <span role=\"img\" aria-label=\"keyboard emoji\">\n            🎵\n          </span>{' '}\n          by{' '}\n          <a className=\"text-secondary\" href=\"https://github.com/osolmaz/\">\n            <strong>@osolmaz</strong>\n          </a>{' '}\n          building upon{' '}\n          <a className=\"text-secondary\" href=\"https://github.com/kevinqi/react-piano/\">\n            <strong>react-piano</strong>\n          </a>{' '}\n          by{' '}\n          <a className=\"text-secondary\" href=\"https://www.kevinqi.com/\">\n            <strong>@kevinsqi</strong>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import range from 'just-range';\n\nexport const CENTS_IN_OCTAVE = 1200;\nexport const BASE_MIDI_NOTE_NUMBER = 57;\nexport const A440 = 440;\n\nconst SORTED_PITCHES = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\nconst ACCIDENTAL_PITCHES = ['Db', 'Eb', 'Gb', 'Ab', 'Bb'];\nconst PITCH_INDEXES = {\n  C: 0,\n  'C#': 1,\n  Db: 1,\n  D: 2,\n  'D#': 3,\n  Eb: 3,\n  E: 4,\n  F: 5,\n  'F#': 6,\n  Gb: 6,\n  G: 7,\n  'G#': 8,\n  Ab: 8,\n  A: 9,\n  'A#': 10,\n  Bb: 10,\n  B: 11,\n};\nconst MIDI_NUMBER_C0 = 12;\nconst MIN_MIDI_NUMBER = MIDI_NUMBER_C0;\nconst MAX_MIDI_NUMBER = 127;\nconst NOTE_REGEX = /([a-g])([#b]?)(\\d+)/;\nconst NOTES_IN_OCTAVE = 12;\n\n// Converts string notes in scientific pitch notation to a MIDI number, or null.\n//\n// Example: \"c#0\" => 13, \"eb5\" => 75, \"abc\" => null\n//\n// References:\n// - http://www.flutopedia.com/octave_notation.htm\n// - https://github.com/danigb/tonal/blob/master/packages/note/index.js\nfunction fromNote(note) {\n  if (!note) {\n    throw Error('Invalid note argument');\n  }\n  const match = NOTE_REGEX.exec(note.toLowerCase());\n  if (!match) {\n    throw Error('Invalid note argument');\n  }\n  const [, letter, accidental, octave] = match;\n  const pitchName = `${letter.toUpperCase()}${accidental}`;\n  const pitchIndex = PITCH_INDEXES[pitchName];\n  if (pitchIndex == null) {\n    throw Error('Invalid note argument');\n  }\n  return MIDI_NUMBER_C0 + pitchIndex + NOTES_IN_OCTAVE * parseInt(octave, 10);\n}\n\n//\n// Build cache for getAttributes\n//\nfunction buildMidiNumberAttributes(midiNumber) {\n  const pitchIndex = (midiNumber - MIDI_NUMBER_C0) % NOTES_IN_OCTAVE;\n  const octave = Math.floor((midiNumber - MIDI_NUMBER_C0) / NOTES_IN_OCTAVE);\n  const pitchName = SORTED_PITCHES[pitchIndex];\n  return {\n    note: `${pitchName}${octave}`,\n    pitchName,\n    octave,\n    midiNumber,\n    isAccidental: ACCIDENTAL_PITCHES.includes(pitchName),\n  };\n}\n\nfunction buildMidiNumberAttributesCache() {\n  return range(MIN_MIDI_NUMBER, MAX_MIDI_NUMBER + 1).reduce((cache, midiNumber) => {\n    cache[midiNumber] = buildMidiNumberAttributes(midiNumber);\n    return cache;\n  }, {});\n}\n\nconst midiNumberAttributesCache = buildMidiNumberAttributesCache();\n\n// Returns an object containing various attributes for a given MIDI number.\n// Throws error for invalid midiNumbers.\nfunction getAttributes(midiNumber) {\n  const attrs = midiNumberAttributesCache[midiNumber];\n  if (!attrs) {\n    throw Error('Invalid MIDI number');\n  }\n  return attrs;\n}\n\n// Returns all MIDI numbers corresponding to natural notes, e.g. C and not C# or Bb.\nconst NATURAL_MIDI_NUMBERS = range(MIN_MIDI_NUMBER, MAX_MIDI_NUMBER + 1).filter(\n  (midiNumber) => !getAttributes(midiNumber).isAccidental,\n);\n\nfunction getKeyIndexOctave(keyNumber, tuning) {\n  let midiDistance = keyNumber - BASE_MIDI_NOTE_NUMBER;\n  let nKey = tuning.keys.length;\n  let keyIndex = midiDistance % nKey;\n  if (keyIndex < 0) {\n    keyIndex = keyIndex + nKey;\n  }\n  let octave = Math.floor(midiDistance / nKey);\n  return { keyIndex, octave };\n}\n\nfunction getCentValueForNote(note, switchVal, tuning) {\n  let midiDistance = note - BASE_MIDI_NOTE_NUMBER;\n  let nKey = tuning.keys.length;\n\n  let key = midiDistance % nKey;\n  if (key < 0) {\n    key = key + nKey;\n  }\n  let centValue = tuning.keys[key].pitch + switchVal * tuning.switchInterval;\n  return centValue;\n}\n\nfunction getMidiNumberForNote(note, switchVal, tuning) {\n  let midiDistance = note - BASE_MIDI_NOTE_NUMBER;\n  let nKey = tuning.keys.length;\n\n  let octaves = Math.floor(midiDistance / nKey);\n  let centValue = getCentValueForNote(note, switchVal, tuning);\n  let midiNumber = BASE_MIDI_NOTE_NUMBER + octaves * 12 + centValue / 100;\n  return midiNumber;\n}\n\nfunction getFrequencyForNote(note, switchVal, tuning) {\n  let midi_number = getMidiNumberForNote(note, switchVal, tuning);\n  let nKey = tuning.keys.length;\n\n  return A440 * Math.pow(2, (midi_number - BASE_MIDI_NOTE_NUMBER) / nKey);\n}\n\nexport default {\n  fromNote,\n  getAttributes,\n  MIN_MIDI_NUMBER,\n  MAX_MIDI_NUMBER,\n  NATURAL_MIDI_NUMBERS,\n  getKeyIndexOctave,\n  getCentValueForNote,\n  getMidiNumberForNote,\n  getFrequencyForNote,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport MidiNumbers from './MidiNumbers';\nimport { Range, Direction } from 'react-range';\nimport * as tinygradient_ from 'tinygradient';\nconst tinygradient = tinygradient_;\n\nfunction getKeyColor(switchVal, minVal, maxVal, color, active) {\n  let neutralKeyColor;\n  let targetColor;\n  let targetInterval;\n\n  if (active) {\n    return '#3ac8da';\n  }\n  if (color) {\n    // neutralKeyColor = '#999'; // black\n    neutralKeyColor = color;\n  } else {\n    neutralKeyColor = '#f3f3f3'; // white\n  }\n  if (switchVal === 0) {\n    return neutralKeyColor;\n  } else if (switchVal < 0) {\n    // targetColor = '#2f4e87'; // blue\n    targetColor = '#0000ff'; // blue\n    targetInterval = Math.abs(minVal) + 1;\n  } else {\n    // targetColor = '#872f2f'; // red\n    targetColor = '#ff0000'; // red\n    targetInterval = maxVal + 1;\n  }\n  return tinygradient([neutralKeyColor, targetColor]).rgb(targetInterval)[Math.abs(switchVal)];\n}\n\nclass Key extends React.Component {\n  static propTypes = {\n    midiNumber: PropTypes.number.isRequired,\n    naturalKeyWidth: PropTypes.number.isRequired, // Width as a ratio between 0 and 1\n    gliss: PropTypes.bool.isRequired,\n    useTouchEvents: PropTypes.bool.isRequired,\n    accidental: PropTypes.bool.isRequired,\n    active: PropTypes.bool.isRequired,\n    disabled: PropTypes.bool.isRequired,\n    onPlayNoteInput: PropTypes.func.isRequired,\n    onStopNoteInput: PropTypes.func.isRequired,\n    onSwitchChange: PropTypes.func.isRequired,\n    // switchValues: PropTypes.arrayOf(\n    //   PropTypes.shape({\n    //     midiNumber: PropTypes.number.isRequired,\n    //     switchValue: PropTypes.number.isRequired,\n    //   }),\n    // ),\n    // accidentalWidthRatio: PropTypes.number.isRequired,\n    // pitchPositions: PropTypes.object.isRequired,\n    children: PropTypes.node,\n  };\n\n  // static defaultProps = {\n  //   accidentalWidthRatio: 0.8,\n  //   pitchPositions: {\n  //     C: 0 / 7,\n  //     Db: 0.55 / 7,\n  //     D: 1 / 7,\n  //     Eb: 1.8 / 7,\n  //     E: 2 / 7,\n  //     F: 3 / 7,\n  //     Gb: 3.5 / 7,\n  //     G: 4 / 7,\n  //     Ab: 4.7 / 7,\n  //     A: 5 / 7,\n  //     Bb: 5.85 / 7,\n  //     B: 6 / 7,\n  //   },\n  // };\n\n  constructor(props) {\n    super(props);\n    this.switchRef = React.createRef();\n  }\n\n  // state = { switchValues: [0] };\n  onPlayNoteInput = () => {\n    // console.log('Fired onPlayNoteInput', this.state.switchValues[0]);\n    // this.switchRef.current.thumbRefs.forEach((ref) => {\n    //   ref.current.blur();\n    // });\n    this.props.onPlayNoteInput([this.props.midiNumber, this.getSwitchVal()]);\n    // this.props.onPlayNoteInput(this.props.midiNumber, );\n  };\n\n  onStopNoteInput = () => {\n    // console.log('Fired onStopNoteInput', this.state.switchValues[0]);\n    this.props.onStopNoteInput([this.props.midiNumber, this.getSwitchVal()]);\n    // this.props.onStopNoteInput(this.props.midiNumber);\n  };\n\n  // Key position is represented by the number of natural key widths from the left\n  getAbsoluteKeyPosition(keyNumber) {\n    const nKeys = this.props.tuning.keys.length;\n    // const OCTAVE_WIDTH = 7;\n    const { keyIndex, octave } = MidiNumbers.getKeyIndexOctave(keyNumber, this.props.tuning);\n    const pitchPosition = this.props.tuning.keys[keyIndex].position;\n    const position = pitchPosition + octave;\n    // console.log(keyNumber, keyIndex, octave, pitchPosition, position);\n    // const octavePosition = OCTAVE_WIDTH * octave;\n    // const octavePosition = (nKeys * octave * this.props.tuning.octaveWidth) / nKeys;\n    // return pitchPosition + octavePosition;\n    return position;\n  }\n\n  getTotalLength() {\n    const { keyIndex, octave } = MidiNumbers.getKeyIndexOctave(\n      this.props.noteRange.last,\n      this.props.tuning,\n    );\n    const lastWidthRatio = this.props.tuning.keys[keyIndex].widthRatio;\n    return (\n      this.getAbsoluteKeyPosition(this.props.noteRange.last) -\n      this.getAbsoluteKeyPosition(this.props.noteRange.first) +\n      lastWidthRatio\n    );\n  }\n  getTotalCount() {\n    return this.props.noteRange.last - this.props.noteRange.first;\n  }\n  getRelativeKeyPosition(midiNumber) {\n    return (\n      (this.getAbsoluteKeyPosition(midiNumber) -\n        this.getAbsoluteKeyPosition(this.props.noteRange.first)) /\n      this.getTotalLength()\n    );\n  }\n\n  getSwitchVal() {\n    return this.props.switchValues[this.props.midiNumber];\n  }\n\n  render() {\n    const {\n      naturalKeyWidth,\n      accidentalWidthRatio,\n      midiNumber,\n      gliss,\n      useTouchEvents,\n      // accidental,\n      active,\n      disabled,\n      children,\n    } = this.props;\n\n    const { keyIndex, octave } = MidiNumbers.getKeyIndexOctave(midiNumber, this.props.tuning);\n    // const keyInfo = this.props.tuning.keys[keyIndex];\n    let widthRatio = this.props.keyInfo.widthRatio || 1;\n    // console.log(midiNumber, keyIndex, widthRatio);\n    let keyLeft = this.getRelativeKeyPosition(midiNumber); //* naturalKeyWidth;\n    let keyWidth = widthRatio / this.getTotalLength();\n    // let keyWidth =  naturalKeyWidth;\n    let constWidthRatio = this.getTotalLength() / this.getTotalCount();\n    let rangeTrackWidth = (0.3 * constWidthRatio) / widthRatio;\n    // let rangeTrackWidth = 0.3;\n    // let thumbWidth = rangeTrackWidth * 1.2;\n\n    // Need to conditionally include/exclude handlers based on useTouchEvents,\n    // because otherwise mobile taps double fire events.\n    // let STEP = 1;\n    let MIN = -6;\n    let MAX = 6;\n    return (\n      <div\n        style={{\n          left: ratioToPercentage(keyLeft),\n          width: ratioToPercentage(keyWidth),\n          height: '17rem',\n          display: 'inline-block',\n          verticalAlign: 'top',\n        }}\n      >\n        <Range\n          className={'ReactPiano__KeyMicrotonalSwitch rounded-lg'}\n          step={1}\n          min={-6}\n          max={6}\n          values={[this.getSwitchVal()]}\n          // values={[0]}\n          onChange={(s) => {\n            // this.setState({ switchValues });\n            this.props.onSwitchChange(this.props.midiNumber, s[0]);\n            // console.log(\"Called onSwitchChange\", this.props.midiNumber, s[0]);\n          }}\n          renderMark={({ props, index }) => (\n            <div\n              {...props}\n              style={{\n                ...props.style,\n                // height: index % 2 ? '3px' : '4px',\n                // width: index % 2 ? '11px' : '16px',\n                height: index === 0 || index === MAX - MIN ? '0px' : '2px',\n                width: index === -MIN ? '180%' : '100%',\n                backgroundColor: '#999',\n                // borderColor: index === -MIN ? '#548BF4' : '#888',\n                // borderWidth:'2px',\n                // backgroundColor: index * STEP > MAX - this.state.switchValues[0] ? '#548BF4' : '#ccc',\n              }}\n            />\n          )}\n          direction={Direction.Up}\n          renderTrack={({ props, children }) => (\n            <div\n              {...props}\n              style={{\n                ...props.style,\n                height: '40%',\n                width: ratioToPercentage(rangeTrackWidth),\n                margin: 'auto',\n                backgroundColor: this.props.keyInfo.type === 'accidental1' ? '#555' : '#ccc',\n                // backgroundColor: accidental ? '#aaa' : '#ccc',\n                marginBottom: '1rem',\n                borderRadius: '3px',\n                boxShadow: '1px 1px 3px #777',\n              }}\n              onMouseDown={(e) => {\n                e.preventDefault();\n              }}\n            >\n              {children}\n            </div>\n          )}\n          renderThumb={({ props }) => (\n            <div\n              {...props}\n              style={{\n                ...props.style,\n                // height: ratioToPercentage(thumbWidth),\n                // width: ratioToPercentage(thumbWidth),\n                height: '8%',\n                width: '210%',\n                // backgroundColor: '#777',\n                backgroundColor: '#478ca6',\n                borderRadius: '2px',\n                boxShadow: '1px 1px 2px #444',\n                // border: '1px solid #fff',\n              }}\n            />\n          )}\n          ref={this.switchRef}\n        />\n        <div\n          className={classNames('ReactPiano__Key', {\n            'ReactPiano__Key--accidental': this.props.keyInfo.type === 'accidental1',\n            'ReactPiano__Key--natural': this.props.keyInfo.type !== 'accidental1',\n            'ReactPiano__Key--disabled': disabled,\n            'ReactPiano__Key--active': active,\n          })}\n          style={{\n            left: ratioToPercentage(keyLeft),\n            // width: accidental ? ratioToPercentage(keyWidth) : '100%',\n            width: ratioToPercentage(keyWidth),\n            background: getKeyColor(\n              this.getSwitchVal(),\n              MIN,\n              MAX,\n              this.props.keyInfo.color,\n              active,\n            ),\n          }}\n          onMouseDown={useTouchEvents ? null : this.onPlayNoteInput}\n          onMouseUp={useTouchEvents ? null : this.onStopNoteInput}\n          onMouseEnter={gliss ? this.onPlayNoteInput : null}\n          onMouseLeave={this.onStopNoteInput}\n          onTouchStart={useTouchEvents ? this.onPlayNoteInput : null}\n          onTouchCancel={useTouchEvents ? this.onStopNoteInput : null}\n          onTouchEnd={useTouchEvents ? this.onStopNoteInput : null}\n        >\n          <div className=\"ReactPiano__NoteLabelContainer\">{children}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction ratioToPercentage(ratio) {\n  return `${ratio * 100}%`;\n}\n\nexport default Key;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport range from 'just-range';\nimport classNames from 'classnames';\n\nimport Key from './Key';\nimport MidiNumbers from './MidiNumbers';\n\nclass Keyboard extends React.Component {\n  static propTypes = {\n    noteRange: noteRangePropType,\n    activeNotes: PropTypes.arrayOf(PropTypes.number),\n    onPlayNoteInput: PropTypes.func.isRequired,\n    onStopNoteInput: PropTypes.func.isRequired,\n    onSwitchChange: PropTypes.func.isRequired,\n    renderNoteLabel: PropTypes.func.isRequired,\n    keyWidthToHeight: PropTypes.number.isRequired,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    gliss: PropTypes.bool,\n    useTouchEvents: PropTypes.bool,\n    // switchValues: PropTypes.objectOf(\n    //   PropTypes.shape({\n    //     midiNumber: PropTypes.number.isRequired,\n    //     switchValue: PropTypes.number.isRequired,\n    //   }),\n    // ),\n    // If width is not provided, must have fixed width and height in parent container\n    width: PropTypes.number,\n  };\n\n  static defaultProps = {\n    disabled: false,\n    gliss: false,\n    useTouchEvents: false,\n    keyWidthToHeight: 0.33,\n    renderNoteLabel: () => {},\n  };\n\n  // Range of midi numbers on keyboard\n  getMidiNumbers() {\n    return range(this.props.noteRange.first, this.props.noteRange.last + 1);\n  }\n\n  getNaturalKeyCount() {\n    // return this.props.tuning.keys.length;\n    return this.getMidiNumbers().filter((number) => {\n      const { isAccidental } = MidiNumbers.getAttributes(number);\n      // return !isAccidental;\n      return true;\n    }).length;\n  }\n\n  // Returns a ratio between 0 and 1\n  getNaturalKeyWidth() {\n    // const midiNumbers = this.getMidiNumbers();\n    return 1 / this.getNaturalKeyCount();\n  }\n\n  getWidth() {\n    return this.props.width ? this.props.width : '100%';\n  }\n\n  getHeight() {\n    if (!this.props.width) {\n      return '100%';\n    }\n    const keyWidth = this.props.width * this.getNaturalKeyWidth();\n    return `1.5*${keyWidth / this.props.keyWidthToHeight}px`;\n  }\n\n  render() {\n    const naturalKeyWidth = this.getNaturalKeyWidth();\n    return (\n      <div\n        className={classNames('ReactPiano__Keyboard', this.props.className)}\n        style={{ width: this.getWidth(), height: this.getHeight() }}\n      >\n        {this.getMidiNumbers().map((midiNumber) => {\n          const { note, isAccidental } = MidiNumbers.getAttributes(midiNumber);\n          const { keyIndex, octave } = MidiNumbers.getKeyIndexOctave(midiNumber, this.props.tuning);\n          const isActive =\n            !this.props.disabled &&\n            (this.props.activeNotes.map((note) => note[0]).includes(midiNumber) ||\n              this.props.activeNotes.includes(midiNumber));\n          return (\n            <>\n              <Key\n                naturalKeyWidth={naturalKeyWidth}\n                midiNumber={midiNumber}\n                // stepsFromBase={midiNumber - 57}\n                noteRange={this.props.noteRange}\n                active={isActive}\n                // accidental={isAccidental}\n                disabled={this.props.disabled}\n                onPlayNoteInput={this.props.onPlayNoteInput}\n                onStopNoteInput={this.props.onStopNoteInput}\n                onSwitchChange={this.props.onSwitchChange}\n                switchValues={this.props.switchValues}\n                gliss={this.props.gliss}\n                useTouchEvents={this.props.useTouchEvents}\n                key={midiNumber}\n                tuning={this.props.tuning}\n                keyInfo={this.props.tuning.keys[keyIndex]}\n              >\n                {this.props.disabled\n                  ? null\n                  : this.props.renderNoteLabel({\n                      isActive,\n                      isAccidental,\n                      midiNumber,\n                    })}\n              </Key>\n            </>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nfunction isNaturalMidiNumber(value) {\n  if (typeof value !== 'number') {\n    return false;\n  }\n  return MidiNumbers.NATURAL_MIDI_NUMBERS.includes(value);\n}\n\nfunction noteRangePropType(props, propName, componentName) {\n  const { first, last } = props[propName];\n  if (!first || !last) {\n    return new Error(\n      `Invalid prop ${propName} supplied to ${componentName}. ${propName} must be an object with .first and .last values.`,\n    );\n  }\n  if (!isNaturalMidiNumber(first) || !isNaturalMidiNumber(last)) {\n    return new Error(\n      `Invalid prop ${propName} supplied to ${componentName}. ${propName} values must be valid MIDI numbers, and should not be accidentals (sharp or flat notes).`,\n    );\n  }\n  if (first >= last) {\n    return new Error(\n      `Invalid prop ${propName} supplied to ${componentName}. ${propName}.first must be smaller than ${propName}.last.`,\n    );\n  }\n}\n\nexport default Keyboard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport difference from 'lodash.difference';\nimport Keyboard from './Keyboard';\nimport range from 'just-range';\nimport {MidiNumbers} from 'react-piano';\n// import { getCentValueForNote, getFrequencyForNote } from '../demo/src/noteHelpers';\n\nclass ControlledPiano extends React.Component {\n  static propTypes = {\n    noteRange: PropTypes.object.isRequired,\n    activeNotes: PropTypes.arrayOf(PropTypes.number.isRequired).isRequired,\n    playNote: PropTypes.func.isRequired,\n    stopNote: PropTypes.func.isRequired,\n    onPlayNoteInput: PropTypes.func.isRequired,\n    onStopNoteInput: PropTypes.func.isRequired,\n    renderNoteLabel: PropTypes.func.isRequired,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    width: PropTypes.number,\n    keyWidthToHeight: PropTypes.number,\n    keyboardShortcuts: PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        midiNumber: PropTypes.number.isRequired,\n      }),\n    ),\n    // switchValues: PropTypes.arrayOf(\n    //   PropTypes.shape({\n    //     midiNumber: PropTypes.number.isRequired,\n    //     switchVal: PropTypes.number.isRequired,\n    //   }),\n    // ),\n  };\n\n  // static defaultProps = {\n  //   renderNoteLabel: ({ keyboardShortcut, midiNumber, isActive, isAccidental }) => {\n  //     let keyNumber = (midiNumber - 57) % 12;\n  //     if (keyNumber < 0) {\n  //       keyNumber += 12;\n  //     }\n  //     // console(this.po)\n  //     // this.props.tuning.keySteps[keyNumber];\n  //     return (\n  //       <div\n  //         className={classNames('ReactPiano__NoteLabel', {\n  //           'ReactPiano__NoteLabel--active': isActive,\n  //           'ReactPiano__NoteLabel--accidental': isAccidental,\n  //           'ReactPiano__NoteLabel--natural': !isAccidental,\n  //         })}\n  //       >\n  //         {keyNumber} <br />\n  //         {keyboardShortcut ? keyboardShortcut : null}\n  //       </div>\n  //     );\n  //   },\n  // };\n\n  constructor(props) {\n    super(props);\n    let switchValues = {};\n    // for (let number of this.getMidiNumbers()) {\n    for (let number of range(0, 1000)) {\n      switchValues[number] = 0;\n    }\n    this.state = {\n      isMouseDown: false,\n      useTouchEvents: false,\n      switchValues: switchValues,\n      initialSwitchValues: props.initialSwitchValues,\n    };\n  }\n\n  onSwitchChange = (midiNumber, newVal) => {\n    let newSwitchValues = this.state.switchValues;\n    for (const num in newSwitchValues) {\n      if ((num - midiNumber) % this.props.tuning.keys.length === 0) {\n        newSwitchValues[num] = newVal;\n      }\n    }\n    this.setState({\n      switchValues: newSwitchValues,\n    });\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.onKeyDown);\n    window.addEventListener('keyup', this.onKeyUp);\n    if (this.props.initialSwitchValues) {\n      this.setSwitchValues(this.props.initialSwitchValues);\n      console.log(this.props.initialSwitchValues);\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.onKeyDown);\n    window.removeEventListener('keyup', this.onKeyUp);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.activeNotes !== prevProps.activeNotes) {\n      this.handleNoteChanges({\n        prevActiveNotes: prevProps.activeNotes || [],\n        nextActiveNotes: this.props.activeNotes || [],\n      });\n    }\n    if (this.state.initialSwitchValues !== this.props.initialSwitchValues) {\n      this.setSwitchValues(this.props.initialSwitchValues);\n      this.setState({ initialSwitchValues: this.props.initialSwitchValues });\n    }\n  }\n\n  setSwitchValues(newSwitchValues) {\n    let switchValues = {};\n    for (let number of this.getMidiNumbers()) {\n      switchValues[number] = 0;\n    }\n    for (const [key, value] of Object.entries(newSwitchValues)) {\n      for (let number of this.getMidiNumbers()) {\n        if (key % this.props.tuning.keys.length === number % this.props.tuning.keys.length) {\n          switchValues[number] = value;\n        }\n      }\n    }\n    console.log('SWITCH VALUES:', switchValues);\n    this.setState({ switchValues: switchValues });\n  }\n  // This function is responsible for diff'ing activeNotes\n  // and playing or stopping notes accordingly.\n  handleNoteChanges = ({ prevActiveNotes, nextActiveNotes }) => {\n    if (this.props.disabled) {\n      return;\n    }\n    const notesStopped = difference(prevActiveNotes, nextActiveNotes);\n    const notesStarted = difference(nextActiveNotes, prevActiveNotes);\n    // console.log('Notes started:', notesStarted);\n    // console.log('Notes stopped:', notesStopped);\n    notesStarted.forEach((midiNumber) => {\n      // Check if midiNumber is int and if so, convert it into an array and append a 0\n      if (midiNumber % 1 === 0) {\n        midiNumber = [midiNumber, this.state.switchValues[midiNumber]];\n      }\n      this.props.playNote(midiNumber);\n    });\n    notesStopped.forEach((midiNumber) => {\n      if (midiNumber % 1 === 0) {\n        midiNumber = [midiNumber, this.state.switchValues[midiNumber]];\n      }\n      this.props.stopNote(midiNumber);\n    });\n  };\n\n  getMidiNumberForKey = (key) => {\n    if (!this.props.keyboardShortcuts) {\n      return null;\n    }\n    const shortcut = this.props.keyboardShortcuts.find((sh) => sh.key === key);\n    return shortcut && shortcut.midiNumber;\n  };\n\n  getKeyForMidiNumber = (midiNumber) => {\n    if (!this.props.keyboardShortcuts) {\n      return null;\n    }\n    const shortcut = this.props.keyboardShortcuts.find((sh) => sh.midiNumber === midiNumber);\n    return shortcut && shortcut.key;\n  };\n\n  onKeyDown = (event) => {\n    // Don't conflict with existing combinations like ctrl + t\n    if (event.ctrlKey || event.metaKey || event.shiftKey || event.repeat) {\n      return;\n    }\n    console.log('Pressed', event);\n    const midiNumber = this.getMidiNumberForKey(event.key);\n    if (midiNumber) {\n      this.onPlayNoteInput([midiNumber, this.state.switchValues[midiNumber]]);\n    }\n  };\n\n  onKeyUp = (event) => {\n    // This *should* also check for event.ctrlKey || event.metaKey || event.ShiftKey like onKeyDown does,\n    // but at least on Mac Chrome, when mashing down many alphanumeric keystrokes at once,\n    // ctrlKey is fired unexpectedly, which would cause onStopNote to NOT be fired, which causes problematic\n    // lingering notes. Since it's fairly safe to call onStopNote even when not necessary,\n    // the ctrl/meta/shift check is removed to fix that issue.\n    const midiNumber = this.getMidiNumberForKey(event.key);\n    if (midiNumber) {\n      this.onStopNoteInput([midiNumber, this.state.switchValues[midiNumber]]);\n    }\n  };\n\n  onPlayNoteInput = (midiNumber) => {\n    if (this.props.disabled) {\n      return;\n    }\n    // Pass in previous activeNotes for recording functionality\n    this.props.onPlayNoteInput(midiNumber, this.props.activeNotes);\n  };\n\n  onStopNoteInput = (midiNumber) => {\n    if (this.props.disabled) {\n      return;\n    }\n    // Pass in previous activeNotes for recording functionality\n    this.props.onStopNoteInput(midiNumber, this.props.activeNotes);\n  };\n\n  onMouseDown = () => {\n    this.setState({\n      isMouseDown: true,\n    });\n  };\n\n  onMouseUp = () => {\n    this.setState({\n      isMouseDown: false,\n    });\n  };\n\n  onTouchStart = () => {\n    this.setState({\n      useTouchEvents: true,\n    });\n  };\n\n  renderNoteLabel = ({ midiNumber, isActive, isAccidental }) => {\n    const keyboardShortcut = this.getKeyForMidiNumber(midiNumber);\n    const switchVal = this.state.switchValues[midiNumber];\n    // let keyNumber = (midiNumber - 57) % 12;\n    // if (keyNumber < 0) {\n    //   keyNumber += 12;\n    // }\n    const {keyIndex} = MidiNumbers.getKeyIndexOctave(midiNumber, this.props.tuning);\n    let keyStep;\n    let key = this.props.tuning.keys[keyIndex];\n    if (key.step) {\n      keyStep = key.step + switchVal;\n    }\n    let centVal = MidiNumbers.getCentValueForNote(midiNumber, switchVal, this.props.tuning);\n    let freqVal = MidiNumbers.getFrequencyForNote(midiNumber, switchVal, this.props.tuning).toFixed(1);\n\n    return (\n      <div\n        className={classNames('ReactPiano__NoteLabel', {\n          'ReactPiano__NoteLabel--active': isActive,\n          'ReactPiano__NoteLabel--accidental': isAccidental,\n          'ReactPiano__NoteLabel--natural': !isAccidental,\n        })}\n      >\n        {this.props.showSteps ? <div className=\"text-xs\">{keyStep}</div> : null}\n        {this.props.showCents ? <div className=\"text-xs\">{Math.round(centVal)}</div> : null}\n        {this.props.showFrequencies ? <div className=\"text-xxs\">{freqVal}</div> : null}\n        {keyboardShortcut ? keyboardShortcut : null}\n      </div>\n    );\n    // return this.props.renderNoteLabel({ keyboardShortcut, midiNumber, isActive, isAccidental });\n  };\n\n  getMidiNumbers() {\n    return range(this.props.noteRange.first, this.props.noteRange.last + 1);\n  }\n\n  render() {\n    return (\n      <div\n        style={{ width: '100%', height: '100%' }}\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp}\n        onTouchStart={this.onTouchStart}\n        data-testid=\"container\"\n      >\n        <Keyboard\n          noteRange={this.props.noteRange}\n          onPlayNoteInput={this.onPlayNoteInput}\n          onStopNoteInput={this.onStopNoteInput}\n          onSwitchChange={this.onSwitchChange}\n          switchValues={this.state.switchValues}\n          activeNotes={this.props.activeNotes}\n          className={this.props.className}\n          disabled={this.props.disabled}\n          width={this.props.width}\n          keyWidthToHeight={this.props.keyWidthToHeight}\n          gliss={this.state.isMouseDown}\n          useTouchEvents={this.state.useTouchEvents}\n          renderNoteLabel={this.renderNoteLabel}\n          tuning={this.props.tuning}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ControlledPiano;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport difference from 'lodash.difference';\nimport ControlledPiano from './ControlledPiano';\nimport Keyboard from './Keyboard';\n\nconst equals = (a, b) => a.length === b.length && a.every((v, i) => v === b[i]);\n\nclass Piano extends React.Component {\n  static propTypes = {\n    noteRange: PropTypes.object.isRequired,\n    activeNotes: PropTypes.arrayOf(PropTypes.number.isRequired),\n    playNote: PropTypes.func.isRequired,\n    stopNote: PropTypes.func.isRequired,\n    onPlayNoteInput: PropTypes.func,\n    onStopNoteInput: PropTypes.func,\n    renderNoteLabel: PropTypes.func,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    width: PropTypes.number,\n    keyWidthToHeight: PropTypes.number,\n    keyboardShortcuts: PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        midiNumber: PropTypes.number.isRequired,\n      }),\n    ),\n  };\n  state = {\n    activeNotes: this.props.activeNotes || [],\n  };\n\n  // constructor(props) {\n  //   super(props);\n  //   this.piano = React.createRef();\n  // }\n  componentDidUpdate(prevProps) {\n    // Make activeNotes \"controllable\" by using internal\n    // state by default, but allowing prop overrides.\n    if (\n      prevProps.activeNotes !== this.props.activeNotes &&\n      this.state.activeNotes !== this.props.activeNotes\n    ) {\n      this.setState({\n        activeNotes: this.props.activeNotes || [],\n      });\n    }\n  }\n\n  handlePlayNoteInput = (midiNumber) => {\n    this.setState((prevState) => {\n      // Need to be handled inside setState in order to set prevActiveNotes without\n      // race conditions.\n      if (this.props.onPlayNoteInput) {\n        this.props.onPlayNoteInput(midiNumber, { prevActiveNotes: prevState.activeNotes });\n      }\n      // console.log('Fired handlePlayNoteInput', midiNumber);\n\n      // Don't append note to activeNotes if it's already present\n      if (prevState.activeNotes.includes(midiNumber)) {\n        return null;\n      }\n      return {\n        activeNotes: prevState.activeNotes.concat([midiNumber]),\n      };\n    });\n  };\n\n  handleStopNoteInput = (midiNumber) => {\n    this.setState((prevState) => {\n      // Need to be handled inside setState in order to set prevActiveNotes without\n      // race conditions.\n      // console.log('Fired handleStopNoteInput', midiNumber);\n\n      if (this.props.onStopNoteInput) {\n        this.props.onStopNoteInput(midiNumber, { prevActiveNotes: this.state.activeNotes });\n      }\n      return {\n        // activeNotes: prevState.activeNotes.filter((note) => midiNumber !== note),\n        activeNotes: prevState.activeNotes.filter((note) => !equals(midiNumber, note)),\n      };\n    });\n  };\n\n  render() {\n    const { activeNotes, onPlayNoteInput, onStopNoteInput, ...otherProps } = this.props;\n    return (\n      <ControlledPiano\n        activeNotes={this.state.activeNotes}\n        onPlayNoteInput={this.handlePlayNoteInput}\n        onStopNoteInput={this.handleStopNoteInput}\n        ref={this.controlledPiano}\n        {...otherProps}\n      />\n    );\n  }\n}\n\nexport default Piano;\n","import MidiNumbers from './MidiNumbers';\n\nfunction createKeyboardShortcuts({ firstNote, lastNote, keyboardConfig }) {\n  let currentMidiNumber = firstNote;\n  let naturalKeyIndex = 0;\n  let keyboardShortcuts = [];\n\n  while (\n    // There are still keys to be assigned\n    naturalKeyIndex < keyboardConfig.length &&\n    // Note to be assigned does not surpass range\n    currentMidiNumber <= lastNote\n  ) {\n    const key = keyboardConfig[naturalKeyIndex];\n    const { isAccidental } = MidiNumbers.getAttributes(currentMidiNumber);\n    if (isAccidental) {\n      keyboardShortcuts.push({\n        key: key.flat,\n        midiNumber: currentMidiNumber,\n      });\n    } else {\n      keyboardShortcuts.push({\n        key: key.natural,\n        midiNumber: currentMidiNumber,\n      });\n      naturalKeyIndex += 1;\n    }\n    currentMidiNumber += 1;\n  }\n  return keyboardShortcuts;\n}\n\nexport default {\n  create: createKeyboardShortcuts,\n  // Preset configurations\n  BOTTOM_ROW: [\n    { natural: 'z', flat: 'a', sharp: 's' },\n    { natural: 'x', flat: 's', sharp: 'd' },\n    { natural: 'c', flat: 'd', sharp: 'f' },\n    { natural: 'v', flat: 'f', sharp: 'g' },\n    { natural: 'b', flat: 'g', sharp: 'h' },\n    { natural: 'n', flat: 'h', sharp: 'j' },\n    { natural: 'm', flat: 'j', sharp: 'k' },\n    { natural: ',', flat: 'k', sharp: 'l' },\n    { natural: '.', flat: 'l', sharp: ';' },\n    { natural: '/', flat: ';', sharp: \"'\" },\n  ],\n  HOME_ROW: [\n    { natural: 'a', flat: 'q', sharp: 'w' },\n    { natural: 's', flat: 'w', sharp: 'e' },\n    { natural: 'd', flat: 'e', sharp: 'r' },\n    { natural: 'f', flat: 'r', sharp: 't' },\n    { natural: 'g', flat: 't', sharp: 'y' },\n    { natural: 'h', flat: 'y', sharp: 'u' },\n    { natural: 'j', flat: 'u', sharp: 'i' },\n    { natural: 'k', flat: 'i', sharp: 'o' },\n    { natural: 'l', flat: 'o', sharp: 'p' },\n    { natural: ';', flat: 'p', sharp: '[' },\n    { natural: \"'\", flat: '[', sharp: ']' },\n  ],\n  QWERTY_ROW: [\n    { natural: 'q', flat: '1', sharp: '2' },\n    { natural: 'w', flat: '2', sharp: '3' },\n    { natural: 'e', flat: '3', sharp: '4' },\n    { natural: 'r', flat: '4', sharp: '5' },\n    { natural: 't', flat: '5', sharp: '6' },\n    { natural: 'y', flat: '6', sharp: '7' },\n    { natural: 'u', flat: '7', sharp: '8' },\n    { natural: 'i', flat: '8', sharp: '9' },\n    { natural: 'o', flat: '9', sharp: '0' },\n    { natural: 'p', flat: '0', sharp: '-' },\n    { natural: '[', flat: '-', sharp: '=' },\n  ],\n  DOUBLE_ROW: [\n    { natural: 'z', flat: 'a', sharp: 's' },\n    { natural: 'x', flat: 's', sharp: 'd' },\n    { natural: 'c', flat: 'd', sharp: 'f' },\n    { natural: 'v', flat: 'f', sharp: 'g' },\n    { natural: 'b', flat: 'g', sharp: 'h' },\n    { natural: 'n', flat: 'h', sharp: 'j' },\n    { natural: 'm', flat: 'j', sharp: 'k' },\n    { natural: ',', flat: 'k', sharp: 'l' },\n    { natural: '.', flat: 'l', sharp: ';' },\n    { natural: '/', flat: ';', sharp: \"'\" },\n    { natural: 'q', flat: '1', sharp: '2' },\n    { natural: 'w', flat: '2', sharp: '3' },\n    { natural: 'e', flat: '3', sharp: '4' },\n    { natural: 'r', flat: '4', sharp: '5' },\n    { natural: 't', flat: '5', sharp: '6' },\n    { natural: 'y', flat: '6', sharp: '7' },\n    { natural: 'u', flat: '7', sharp: '8' },\n    { natural: 'i', flat: '8', sharp: '9' },\n    { natural: 'o', flat: '9', sharp: '0' },\n    { natural: 'p', flat: '0', sharp: '-' },\n    { natural: '[', flat: '-', sharp: '=' },\n  ],\n};\n","import React from 'react';\nimport Dimensions from 'react-dimensions';\n\nclass DimensionsProvider extends React.Component {\n  render() {\n    return (\n      <div>\n        {this.props.children({\n          containerWidth: this.props.containerWidth,\n          containerHeight: this.props.containerHeight,\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Dimensions()(DimensionsProvider);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass InstrumentListProvider extends React.Component {\n  static propTypes = {\n    hostname: PropTypes.string.isRequired,\n    soundfont: PropTypes.oneOf(['MusyngKite', 'FluidR3_GM']),\n    render: PropTypes.func,\n  };\n\n  static defaultProps = {\n    soundfont: 'MusyngKite',\n  };\n\n  state = {\n    instrumentList: null,\n  };\n\n  componentDidMount() {\n    this.loadInstrumentList();\n  }\n\n  loadInstrumentList = () => {\n    fetch(`${this.props.hostname}/${this.props.soundfont}/names.json`)\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          instrumentList: data,\n        });\n      });\n  };\n\n  render() {\n    return this.props.render(this.state.instrumentList);\n  }\n}\n\nexport default InstrumentListProvider;\n","// See https://github.com/danigb/soundfont-player\n// for more documentation on prop options.\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Soundfont from 'soundfont-player';\n\nclass SoundfontProvider extends React.Component {\n  static propTypes = {\n    instrumentName: PropTypes.string.isRequired,\n    hostname: PropTypes.string.isRequired,\n    format: PropTypes.oneOf(['mp3', 'ogg']),\n    soundfont: PropTypes.oneOf(['MusyngKite', 'FluidR3_GM']),\n    audioContext: PropTypes.instanceOf(window.AudioContext),\n    onLoad: PropTypes.func,\n    render: PropTypes.func,\n  };\n\n  static defaultProps = {\n    format: 'mp3',\n    soundfont: 'MusyngKite',\n    instrumentName: 'choir_aahs',\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeAudioNodes: {},\n      instrument: null,\n    };\n  }\n\n  componentDidMount() {\n    this.loadInstrument(this.props.instrumentName);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.instrumentName !== this.props.instrumentName) {\n      this.loadInstrument(this.props.instrumentName);\n    }\n\n    if (prevState.instrument !== this.state.instrument) {\n      if (!this.props.onLoad) {\n        return;\n      }\n      this.props.onLoad({\n        playNote: this.playNote,\n        stopNote: this.stopNote,\n        stopAllNotes: this.stopAllNotes,\n      });\n    }\n  }\n\n  loadInstrument = (instrumentName) => {\n    // Re-trigger loading state\n    this.setState({\n      instrument: null,\n    });\n    Soundfont.instrument(this.props.audioContext, instrumentName, {\n      format: this.props.format,\n      soundfont: this.props.soundfont,\n      nameToUrl: (name, soundfont, format) => {\n        return `${this.props.hostname}/${soundfont}/${name}-${format}.js`;\n      },\n    }).then((instrument) => {\n      this.setState({\n        instrument,\n      });\n    });\n  };\n\n  playNote = (midiNumber) => {\n    this.resumeAudio().then(() => {\n      const audioNode = this.state.instrument.play(midiNumber);\n      this.setState({\n        activeAudioNodes: Object.assign({}, this.state.activeAudioNodes, {\n          [midiNumber]: audioNode,\n        }),\n      });\n    });\n  };\n\n  stopNote = (midiNumber) => {\n    this.resumeAudio().then(() => {\n      if (!this.state.activeAudioNodes[midiNumber]) {\n        return;\n      }\n      const audioNode = this.state.activeAudioNodes[midiNumber];\n      audioNode.stop();\n      this.setState({\n        activeAudioNodes: Object.assign({}, this.state.activeAudioNodes, { [midiNumber]: null }),\n      });\n    });\n  };\n\n  resumeAudio = () => {\n    if (this.props.audioContext.state === 'suspended') {\n      return this.props.audioContext.resume();\n    } else {\n      return Promise.resolve();\n    }\n  };\n\n  // Clear any residual notes that don't get called with stopNote\n  stopAllNotes = () => {\n    this.props.audioContext.resume().then(() => {\n      const activeAudioNodes = Object.values(this.state.activeAudioNodes);\n      activeAudioNodes.forEach((node) => {\n        if (node) {\n          node.stop();\n        }\n      });\n      this.setState({\n        activeAudioNodes: {},\n      });\n    });\n  };\n\n  render() {\n    return this.props.render\n      ? this.props.render({\n          isLoading: !this.state.instrument,\n          playNote: this.playNote,\n          stopNote: this.stopNote,\n          stopAllNotes: this.stopAllNotes,\n        })\n      : null;\n  }\n}\n\nexport default SoundfontProvider;\n","import React from 'react';\nimport { MidiNumbers } from 'react-piano';\n\nclass AutoblurSelect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.selectRef = React.createRef();\n  }\n\n  onChange = (event) => {\n    this.props.onChange(event);\n    this.selectRef.current.blur();\n  };\n\n  render() {\n    const { children, onChange, ...otherProps } = this.props;\n    return (\n      <select {...otherProps} onChange={this.onChange} ref={this.selectRef}>\n        {children}\n      </select>\n    );\n  }\n}\n\nfunction Label(props) {\n  return <small className=\"mb-1 text-muted\">{props.children}</small>;\n}\n\nclass PianoConfig extends React.Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n    // this.onChangeTuning\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = (event) => {\n    const numNotes = this.props.config.noteRange.last - this.props.config.noteRange.first + 1;\n    const minOffset = 0;\n    const maxOffset = numNotes - this.props.keyboardShortcuts.length;\n    if (event.key === 'ArrowLeft') {\n      const reducedOffset = this.props.config.keyboardShortcutOffset - 1;\n      if (reducedOffset >= minOffset) {\n        this.props.setConfig({\n          keyboardShortcutOffset: reducedOffset,\n        });\n      }\n    } else if (event.key === 'ArrowRight') {\n      const increasedOffset = this.props.config.keyboardShortcutOffset + 1;\n      if (increasedOffset <= maxOffset) {\n        this.props.setConfig({\n          keyboardShortcutOffset: increasedOffset,\n        });\n      }\n    }\n  };\n\n  onChangeFirstNote = (event) => {\n    this.props.setConfig({\n      noteRange: {\n        first: parseInt(event.target.value, 10),\n        last: this.props.config.noteRange.last,\n      },\n    });\n  };\n\n  onChangeLastNote = (event) => {\n    this.props.setConfig({\n      noteRange: {\n        first: this.props.config.noteRange.first,\n        last: parseInt(event.target.value, 10),\n      },\n    });\n  };\n\n  onChangeInstrument = (event) => {\n    this.props.setConfig({\n      instrumentName: event.target.value,\n    });\n  };\n\n  onChangeShowSteps = (event) => {\n    this.props.setConfig({\n      showSteps: event.target.checked,\n    });\n  };\n\n  onChangeShowCents = (event) => {\n    this.props.setConfig({\n      showCents: event.target.checked,\n    });\n  };\n\n  onChangeShowFrequencies = (event) => {\n    this.props.setConfig({\n      showFrequencies: event.target.checked,\n    });\n  };\n\n  onChangeTuning = (event) => {\n    this.props.setConfig({\n      tuning: this.props.tuningList.find((tuning) => tuning.name === event.target.value),\n    });\n  };\n\n  render() {\n    const midiNumbersToNotes = MidiNumbers.NATURAL_MIDI_NUMBERS.reduce((obj, midiNumber) => {\n      obj[midiNumber] = MidiNumbers.getAttributes(midiNumber).note;\n      return obj;\n    }, {});\n    const {\n      noteRange,\n      instrumentName,\n      tuningName,\n      showSteps,\n      showCents,\n      showFrequencies,\n    } = this.props.config;\n\n    return (\n      <div className=\"form-row\">\n        <div className=\"col-6\">\n          <Label>Tuning</Label>\n          <AutoblurSelect\n            className=\"form-control\"\n            value={tuningName}\n            onChange={this.onChangeTuning}\n          >\n            {this.props.tuningList.map((value) => (\n              <option value={value.name} key={value.name}>\n                {value.name}\n              </option>\n            ))}\n          </AutoblurSelect>\n        </div>\n        <div className=\"col-3\">\n          <Label>First note</Label>\n          <AutoblurSelect\n            className=\"form-control\"\n            onChange={this.onChangeFirstNote}\n            value={noteRange.first}\n          >\n            {MidiNumbers.NATURAL_MIDI_NUMBERS.map((midiNumber) => (\n              <option value={midiNumber} disabled={midiNumber >= noteRange.last} key={midiNumber}>\n                {midiNumbersToNotes[midiNumber]}\n              </option>\n            ))}\n          </AutoblurSelect>\n        </div>\n        <div className=\"col-3\">\n          <Label>Last note</Label>\n          <AutoblurSelect\n            className=\"form-control\"\n            onChange={this.onChangeLastNote}\n            value={noteRange.last}\n          >\n            {MidiNumbers.NATURAL_MIDI_NUMBERS.map((midiNumber) => (\n              <option value={midiNumber} disabled={midiNumber <= noteRange.first} key={midiNumber}>\n                {midiNumbersToNotes[midiNumber]}\n              </option>\n            ))}\n          </AutoblurSelect>\n        </div>\n        <div className=\"col-12 mt-2\">\n          <Label>Description</Label>\n          <p className=\"text-muted\">{this.props.config.tuning.description}</p>\n        </div>\n        <div className=\"col-6\">\n          <Label>Instrument</Label>\n          <AutoblurSelect\n            className=\"form-control\"\n            value={instrumentName}\n            onChange={this.onChangeInstrument}\n          >\n            {this.props.instrumentList.map((value) => (\n              <option value={value} key={value}>\n                {value}\n              </option>\n            ))}\n          </AutoblurSelect>\n        </div>\n        <div className=\"col-12\">\n          <Label>Display</Label>\n          <div className=\"form-check\">\n            <input\n              className=\"form-check-input appearance-none h-4 w-4 border border-gray-300 rounded-sm bg-white checked:bg-blue-600 checked:border-blue-600 focus:outline-none transition duration-200 mt-1 align-top bg-no-repeat bg-center bg-contain float-left mr-2 cursor-pointer\"\n              type=\"checkbox\"\n              checked={showSteps}\n              onChange={this.onChangeShowSteps}\n              id=\"showStepsCheckbox\"\n            />\n            <label className=\"form-check-label inline-block\" for=\"showStepsCheckbox\">\n              Steps from base note\n            </label>\n          </div>\n          <div className=\"form-check\">\n            <input\n              className=\"form-check-input appearance-none h-4 w-4 border border-gray-300 rounded-sm bg-white checked:bg-blue-600 checked:border-blue-600 focus:outline-none transition duration-200 mt-1 align-top bg-no-repeat bg-center bg-contain float-left mr-2 cursor-pointer\"\n              type=\"checkbox\"\n              checked={showCents}\n              onChange={this.onChangeShowCents}\n              id=\"showCentsCheckbox\"\n            />\n            <label className=\"form-check-label inline-block\" for=\"showCentsCheckbox\">\n              Cents from base note\n            </label>\n          </div>\n          <div className=\"form-check\">\n            <input\n              className=\"form-check-input appearance-none h-4 w-4 border border-gray-300 rounded-sm bg-white checked:bg-blue-600 checked:border-blue-600 focus:outline-none transition duration-200 mt-1 align-top bg-no-repeat bg-center bg-contain float-left mr-2 cursor-pointer\"\n              type=\"checkbox\"\n              checked={showFrequencies}\n              onChange={this.onChangeShowFrequencies}\n              id=\"showFrequenciesCheckbox\"\n            />\n            <label className=\"form-check-label inline-block\" for=\"showFrequenciesCheckbox\">\n              Note frequency\n            </label>\n          </div>\n        </div>\n        <div className=\"col mt-2\">\n          <small className=\"text-muted\">\n            Use <strong>left arrow</strong> and <strong>right arrow</strong> to move the keyboard\n            shortcuts around.\n          </small>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PianoConfig;\n","const audioContext = new window.AudioContext();\n\nexport default audioContext;\n","// See e.g. https://github.com/jxnblk/bumpkit/blob/master/src/Bumpkit.js\n// for audio org example\n\nclass Oscillator {\n  constructor(options = {}) {\n    console.log(options);\n    this.audioContext = options.audioContext;\n    this.gainNode = this.audioContext.createGain();\n    this.gainNode.gain.value = options.gain;\n    this.gainNode.connect(this.audioContext.destination);\n\n    this.oscillators = {};\n  }\n\n  start(freq) {\n    if (this.oscillators[freq]) {\n      return;\n    }\n\n    let oscillator = this.audioContext.createOscillator();\n    oscillator.type = 'sine';\n    oscillator.frequency.value = freq;\n    oscillator.connect(this.gainNode);\n    oscillator.start(0);\n\n    // console.log('playing frequency at value', oscillator.frequency.value);\n\n    this.oscillators[freq] = oscillator;\n  }\n\n  stop(freq) {\n    if (!this.oscillators[freq]) {\n      return;\n    }\n\n    this.oscillators[freq].stop(0);\n    this.oscillators[freq].disconnect();\n    delete this.oscillators[freq];\n  }\n}\n\nexport default Oscillator;\n","import _ from 'lodash';\nimport { MidiNumbers } from 'piano-utils';\n\nexport const CENTS_IN_OCTAVE = 1200;\nexport const BASE_MIDI_NOTE_NUMBER = 57;\nexport const A440 = 440;\nconst BLACK_KEY_COLOR = '#999999';\nconst QUARTER_TONE_KEY_COLOR = '#d3d3d3';\n\n// function getFrequencyRatio(note, numOctaves, numSteps) {\n//   return Math.pow(2, note * (numOctaves / numSteps));\n// }\n\n// function getCustomCentsForNote(note, customCentValues) {\n//   const offset = note % customCentValues.length;\n//   const centOffset = customCentValues[offset];\n//   const octave = Math.floor(note / customCentValues.length);\n//   return CENTS_IN_OCTAVE * octave + centOffset;\n// }\n\n// export function getFrequency(rootFrequency, note, numOctaves, numSteps) {\n//   return rootFrequency * getFrequencyRatio(note, numOctaves, numSteps);\n// }\n\n// export function getFrequencyFromCents(rootFrequency, cents) {\n//   return rootFrequency * Math.pow(2, cents / CENTS_IN_OCTAVE);\n// }\n\n// export function getCentsForNote(config, note) {\n//   if (config.useCustomCentValues) {\n//     return getCustomCentsForNote(note, config.customCentValues);\n//   } else {\n//     return ((CENTS_IN_OCTAVE * config.numOctaves) / config.numSteps) * note;\n//   }\n// }\n\n// TODO: port this to piano-utils\n// http://subsynth.sourceforge.net/midinote2freq.html\n// function getFrequencyForMidiNumber(midiNumber) {\n//   return (A440 / 32) * Math.pow(2, (midiNumber - 9) / 12);\n// }\n\n// export function getFrequencyForNote(config, note) {\n//   const lowestNoteMidiNumber = MidiNumbers.fromNote(config.lowestNote);\n//   const rootFrequency = getFrequencyForMidiNumber(lowestNoteMidiNumber);\n\n//   if (config.useCustomCentValues) {\n//     const centValue = getCustomCentsForNote(note, config.customCentValues);\n//     return getFrequencyFromCents(rootFrequency, centValue);\n//   } else {\n//     return getFrequency(rootFrequency, note, config.numOctaves, config.numSteps);\n//   }\n// }\n\n// export function getStepFrequencies(config) {\n//   return _.range(config.numSteps + 1).map((offset) => {\n//     const note = getNoteFromOffset(config, offset);\n//     return getFrequencyForNote(config, note);\n//   });\n// }\n\n// Notes are a numeric index into the microtone scale.\n// For example, given a standard 12 EDO scale, note 0 corresponds to lowestNote, note 12 corresponds\n// to 1200 cents above lowestNote, etc.\n//\n// Because you can select specific notes to include in the scale with state.config.selectedNotes,\n// we have offset which is slightly different from notes.\n// For example, if selectedNotes == {0, 3, 6}, offset 0 corresponds to note 0, offset 2 corresponds to note 6,\n// and offset 3 corresponds to note 12.\nexport function getNoteFromOffset(config, offset) {\n  const sortedNotes = _.sortBy(Object.keys(config.selectedNotes).map((str) => parseInt(str, 10)));\n  const numNotes = sortedNotes.length;\n  if (numNotes > 0) {\n    const octaves = Math.floor(offset / numNotes);\n    const remainder = offset % numNotes;\n    return octaves * config.numSteps + sortedNotes[remainder];\n  } else {\n    return offset;\n  }\n}\n\n// In 12EDO, 0 -> 1, 11 -> 12, 12 -> 1, 13 -> 2\nexport function getNoteLabel(config, note) {\n  return (note % config.numSteps) + 1;\n}\nconst PIANO_KEYS = [\n  {\n    // A\n    type: 'main',\n    widthRatio: 1 / 7,\n    position: 0 / 7,\n  },\n  {\n    // A#\n    type: 'accidental1',\n    widthRatio: 0.8 / 7,\n    position: 0.85 / 7,\n    color: BLACK_KEY_COLOR,\n  },\n  {\n    // B\n    type: 'main',\n    widthRatio: 1 / 7,\n    position: 1 / 7,\n  },\n  {\n    // C\n    type: 'main',\n    widthRatio: 1 / 7,\n    position: 2 / 7,\n  },\n  {\n    // C#\n    type: 'accidental1',\n    widthRatio: 0.8 / 7,\n    position: 2.55 / 7,\n    color: BLACK_KEY_COLOR,\n  },\n  {\n    // D\n    type: 'main',\n    widthRatio: 1 / 7,\n    position: 3 / 7,\n  },\n  {\n    // D#\n    type: 'accidental1',\n    widthRatio: 0.8 / 7,\n    position: 3.8 / 7,\n    color: BLACK_KEY_COLOR,\n  },\n  {\n    // E\n    type: 'main',\n    widthRatio: 1 / 7,\n    position: 4 / 7,\n  },\n  {\n    // F\n    type: 'main',\n    widthRatio: 1 / 7,\n    position: 5 / 7,\n  },\n  {\n    // F#\n    type: 'accidental1',\n    widthRatio: 0.8 / 7,\n    position: 5.5 / 7,\n    color: BLACK_KEY_COLOR,\n  },\n  {\n    // G\n    type: 'main',\n    widthRatio: 1 / 7,\n    position: 6 / 7,\n  },\n  {\n    // G#\n    type: 'accidental1',\n    widthRatio: 0.8 / 7,\n    position: 6.7 / 7,\n    color: BLACK_KEY_COLOR,\n  },\n];\n\nconst SMALL_KEY_RATIO = 0.75;\nconst BAGLAMA_WIDTH = 17 - 5 * (1 - SMALL_KEY_RATIO);\nconst BAGLAMA_KEYS = [\n  {\n    // A\n    type: 'main',\n    widthRatio: 1 / BAGLAMA_WIDTH,\n    position: 0 / BAGLAMA_WIDTH,\n  },\n  {\n    // A#\n    type: 'main',\n    widthRatio: 1 / BAGLAMA_WIDTH,\n    position: 1 / BAGLAMA_WIDTH,\n    color: BLACK_KEY_COLOR,\n  },\n  {\n    //\n    type: 'main',\n    widthRatio: SMALL_KEY_RATIO / BAGLAMA_WIDTH,\n    position: 2 / BAGLAMA_WIDTH,\n    color: QUARTER_TONE_KEY_COLOR,\n  },\n  {\n    // B\n    type: 'main',\n    widthRatio: 1 / BAGLAMA_WIDTH,\n    position: (3 - (1 - SMALL_KEY_RATIO)) / BAGLAMA_WIDTH,\n  },\n  {\n    // C\n    type: 'main',\n    widthRatio: 1 / BAGLAMA_WIDTH,\n    position: (4 - (1 - SMALL_KEY_RATIO)) / BAGLAMA_WIDTH,\n  },\n  {\n    //\n    type: 'main',\n    widthRatio: SMALL_KEY_RATIO / BAGLAMA_WIDTH,\n    position: (5 - (1 - SMALL_KEY_RATIO)) / BAGLAMA_WIDTH,\n    color: QUARTER_TONE_KEY_COLOR,\n  },\n  {\n    // C#\n    type: 'main',\n    widthRatio: 1 / BAGLAMA_WIDTH,\n    position: (6 - 2 * (1 - SMALL_KEY_RATIO)) / BAGLAMA_WIDTH,\n    color: BLACK_KEY_COLOR,\n  },\n  {\n    // D\n    type: 'main',\n    widthRatio: 1 / BAGLAMA_WIDTH,\n    position: (7 - 2 * (1 - SMALL_KEY_RATIO)) / BAGLAMA_WIDTH,\n  },\n  {\n    // D#\n    type: 'main',\n    widthRatio: 1 / BAGLAMA_WIDTH,\n    position: (8 - 2 * (1 - SMALL_KEY_RATIO)) / BAGLAMA_WIDTH,\n    color: BLACK_KEY_COLOR,\n  },\n  {\n    //\n    type: 'main',\n    widthRatio: SMALL_KEY_RATIO / BAGLAMA_WIDTH,\n    position: (9 - 2 * (1 - SMALL_KEY_RATIO)) / BAGLAMA_WIDTH,\n    color: QUARTER_TONE_KEY_COLOR,\n  },\n  {\n    // E\n    type: 'main',\n    widthRatio: 1 / BAGLAMA_WIDTH,\n    position: (10 - 3 * (1 - SMALL_KEY_RATIO)) / BAGLAMA_WIDTH,\n  },\n  {\n    // F\n    type: 'main',\n    widthRatio: 1 / BAGLAMA_WIDTH,\n    position: (11 - 3 * (1 - SMALL_KEY_RATIO)) / BAGLAMA_WIDTH,\n  },\n  {\n    //\n    type: 'main',\n    widthRatio: SMALL_KEY_RATIO / BAGLAMA_WIDTH,\n    position: (12 - 3 * (1 - SMALL_KEY_RATIO)) / BAGLAMA_WIDTH,\n    color: QUARTER_TONE_KEY_COLOR,\n  },\n  {\n    // F#\n    type: 'main',\n    widthRatio: 1 / BAGLAMA_WIDTH,\n    position: (13 - 4 * (1 - SMALL_KEY_RATIO)) / BAGLAMA_WIDTH,\n    color: BLACK_KEY_COLOR,\n  },\n  {\n    // G\n    type: 'main',\n    widthRatio: 1 / BAGLAMA_WIDTH,\n    position: (14 - 4 * (1 - SMALL_KEY_RATIO)) / BAGLAMA_WIDTH,\n  },\n  {\n    // G#\n    type: 'main',\n    widthRatio: 1 / BAGLAMA_WIDTH,\n    position: (15 - 4 * (1 - SMALL_KEY_RATIO)) / BAGLAMA_WIDTH,\n    color: BLACK_KEY_COLOR,\n  },\n  {\n    //\n    type: 'main',\n    widthRatio: SMALL_KEY_RATIO / BAGLAMA_WIDTH,\n    position: (16 - 4 * (1 - SMALL_KEY_RATIO)) / BAGLAMA_WIDTH,\n    color: QUARTER_TONE_KEY_COLOR,\n  },\n];\n\nconst TRADITIONAL_BAGLAMA_PITCHES = [\n  0, // A\n  99, // A#\n  151,\n  204, // B\n  303, // C\n  355, //\n  408, // C#\n  498, // D\n  597, // D#\n  649,\n  702, // E\n  801, // F\n  853,\n  906, // F#\n  996, // G\n  1095, // G#\n  1147,\n];\n\nconst URMAVI_PITCHES = [\n  0,\n  90,\n  180,\n  204,\n  294,\n  384,\n  408,\n  498,\n  588,\n  678,\n  702,\n  792,\n  882,\n  906,\n  996,\n  1086,\n  1177,\n];\n\nconst BAGLAMA_24TET_PITCHES = [\n  0, // A\n  100, // A#\n  150,\n  200, // B\n  300, // C\n  350, //\n  400, // C#\n  500, // D\n  600, // D#\n  650,\n  700, // E\n  800, // F\n  850,\n  900, // F#\n  1000, // G\n  1100, // G#\n  1150,\n];\n\nconst BAGLAMA_72TET_PITCHES = [\n  0,\n  100,\n  150,\n  200,\n  300,\n  367,\n  400,\n  500,\n  600,\n  667,\n  700,\n  800,\n  867,\n  900,\n  1000,\n  1100,\n  1150,\n];\n\nconst STEPS_72 = [0, 6, 12, 18, 24, 30, 36, 42, 48, 54, 60, 66];\nconst STEPS_53 = [0, 4, 9, 13, 18, 22, 27, 31, 35, 40, 44, 49];\nconst STEPS_106 = [0, 8, 18, 26, 36, 44, 54, 62, 70, 80, 88, 98];\n\nexport const TUNINGS = [\n  {\n    name: '72-TET',\n    description:\n      'Western 12-TET scale further subdivided 6 times. Since 72 is divisible by 1, 2, 3, 4, 6, 8, 9, 12, 18, 24, 36, and 72, 72-TET includes all those equal temperaments.',\n    keys: PIANO_KEYS.map((key, index) => {\n      return {\n        pitch: (STEPS_72[index] * CENTS_IN_OCTAVE) / 72,\n        step: STEPS_72[index],\n        ...key,\n      };\n    }),\n    switchInterval: CENTS_IN_OCTAVE / 72,\n  },\n  {\n    name: '53-TET',\n    description:\n      'Used to describe the intervals of Classical Turkish Music according to the Arel-Ezgi-Uzdilek System, although discrepancies have been observed between theory and practice. This temperament is known to approximate Pythagorean tuning very closely, and the default places of the switches are equivalent to an A-based Pythagorean tuning.',\n    keys: PIANO_KEYS.map((key, index) => {\n      return {\n        pitch: (STEPS_53[index] * CENTS_IN_OCTAVE) / 53,\n        step: STEPS_53[index],\n        ...key,\n      };\n    }),\n    switchInterval: CENTS_IN_OCTAVE / 53,\n  },\n  {\n    name: '106-TET',\n    description: 'A two-fold division of 53-TET.',\n    keys: PIANO_KEYS.map((key, index) => {\n      return {\n        pitch: (STEPS_106[index] * CENTS_IN_OCTAVE) / 106,\n        step: STEPS_106[index],\n        ...key,\n      };\n    }),\n    switchInterval: CENTS_IN_OCTAVE / 106,\n  },\n  {\n    name: 'Traditional Baglama Scale',\n    description: 'As reported by Tura.',\n    keys: BAGLAMA_KEYS.map((key, index) => {\n      return {\n        pitch: TRADITIONAL_BAGLAMA_PITCHES[index],\n        ...key,\n      };\n    }),\n    switchInterval: 10,\n  },\n  {\n    name: \"Urmawi's 17-tone Pythagorean Scale\",\n    description: 'As described in Kitab al-Adwar.',\n    keys: BAGLAMA_KEYS.map((key, index) => {\n      return {\n        pitch: URMAVI_PITCHES[index],\n        ...key,\n      };\n    }),\n    switchInterval: 10,\n  },\n  {\n    name: '24-TET Baglama Scale',\n    description: 'A 24-TET modification of the Baglama scale according to contemporary practice.',\n    keys: BAGLAMA_KEYS.map((key, index) => {\n      return {\n        pitch: BAGLAMA_24TET_PITCHES[index],\n        ...key,\n      };\n    }),\n    switchInterval: 10,\n  },\n  {\n    name: '72-TET Baglama Scale',\n    description:\n      'Similar to 24-TET Baglama Scale, but certain frets are modified to produce the traditional mujannab interval.',\n    keys: BAGLAMA_KEYS.map((key, index) => {\n      return {\n        pitch: BAGLAMA_72TET_PITCHES[index],\n        ...key,\n      };\n    }),\n    switchInterval: 10,\n  },\n];\n\n// export function getAttributes(keyNumber, tuning) {\n//   let midiDistance = keyNumber - BASE_MIDI_NOTE_NUMBER;\n//   let nKeys = tuning.keys.length;\n//   let keyIndex = midiDistance % nKeys;\n//   if (keyIndex < 0) {\n//     keyIndex = keyIndex + nKeys;\n//   }\n//   let octaves = Math.floor(midiDistance / nKeys);\n//   return keyIndex, octaves;\n// }\n","import React from 'react';\nimport { Piano, KeyboardShortcuts, MidiNumbers } from 'react-piano';\nimport MdArrowDownward from 'react-icons/lib/md/arrow-downward';\n\nimport DimensionsProvider from './DimensionsProvider';\nimport InstrumentListProvider from './InstrumentListProvider';\nimport SoundfontProvider from './SoundfontProvider';\nimport PianoConfig from './PianoConfig';\n\nimport audioContext from './audioContext';\nimport Oscillator from './audio/Oscillator';\nimport {\n  getCentsForNote,\n  // getFrequencyForNote,\n  getNoteFromOffset,\n  getNoteLabel,\n  // getMidiNumberForNote,\n  TUNINGS,\n} from './noteHelpers';\n\nconst GAIN_VALUE = 0.1;\n\nclass InteractiveDemo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      config: {\n        // instrumentName: 'choir_aahs',\n        // instrumentName: 'acoustic_grand_piano',\n        instrumentName: 'acoustic_guitar_steel',\n        tuning: TUNINGS[0],\n        // tuning: TUNINGS[3],\n        noteRange: {\n          first: MidiNumbers.fromNote('g2'),\n          last: MidiNumbers.fromNote('f5'),\n        },\n        keyboardShortcutOffset: 0,\n        showSteps: false,\n        showCents: true,\n        showFrequencies: false,\n      },\n      oscillator: null,\n    };\n\n    // this.playbackIntervalFn = null;\n    // console.log(props);\n    this.oscillator = new Oscillator({\n      audioContext: audioContext,\n      gain: GAIN_VALUE,\n    });\n  }\n\n  render() {\n    const keyboardShortcuts = KeyboardShortcuts.create({\n      firstNote: this.state.config.noteRange.first + this.state.config.keyboardShortcutOffset,\n      lastNote: this.state.config.noteRange.last + this.state.config.keyboardShortcutOffset,\n      // keyboardConfig: KeyboardShortcuts.HOME_ROW,\n      keyboardConfig: KeyboardShortcuts.DOUBLE_ROW,\n    });\n\n    return (\n      <SoundfontProvider\n        audioContext={this.props.audioContext}\n        instrumentName={this.state.config.instrumentName}\n        hostname={this.props.soundfontHostname}\n        render={({ isLoading, playNote, stopNote, stopAllNotes }) => (\n          <div>\n            <div className=\"text-center\">\n              <p className=\"\">Try it by clicking, tapping, or using your keyboard:</p>\n              <div style={{ color: '#777' }}>\n                <MdArrowDownward size={32} />\n              </div>\n            </div>\n            <div className=\"mt-4 disable-select disable-touch\">\n              <DimensionsProvider>\n                {({ containerWidth }) => (\n                  <Piano\n                    noteRange={this.state.config.noteRange}\n                    tuning={this.state.config.tuning}\n                    keyboardShortcuts={keyboardShortcuts}\n                    // playNote={playNote}\n                    // stopNote={stopNote}\n                    disabled={isLoading}\n                    // disabled={false}\n                    playNote={(note) => {\n                      console.log('Starting', note);\n                      // this.oscillator.start(this.getFrequencyForNote(note[0], note[1]));\n                      let midiNumber = MidiNumbers.getMidiNumberForNote(note[0], note[1], this.state.config.tuning)\n                      playNote(midiNumber);\n                      // playNote(midiNumber+7.01955);\n                      playNote(midiNumber+12);\n                    }}\n                    stopNote={(note) => {\n                      console.log('Stopping', note);\n                      // this.oscillator.stop(this.getFrequencyForNote(note[0], note[1]));\n                      let midiNumber = MidiNumbers.getMidiNumberForNote(note[0], note[1], this.state.config.tuning)\n                      stopNote(midiNumber);\n                      // stopNote(midiNumber+7.01955);\n                      stopNote(midiNumber+12);\n                    }}\n                    showSteps={this.state.config.showSteps}\n                    showCents={this.state.config.showCents}\n                    showFrequencies={this.state.config.showFrequencies}\n                    width={containerWidth}\n                    gain={GAIN_VALUE}\n                  />\n                )}\n              </DimensionsProvider>\n            </div>\n            <div className=\"row mt-5\">\n              <div className=\"col-lg-8 offset-lg-2\">\n                <InstrumentListProvider\n                  hostname={this.props.soundfontHostname}\n                  render={(instrumentList) => (\n                    <PianoConfig\n                      config={this.state.config}\n                      setConfig={(config) => {\n                        this.setState({\n                          config: Object.assign({}, this.state.config, config),\n                        });\n                        stopAllNotes();\n                      }}\n                      instrumentList={instrumentList || [this.state.config.instrumentName]}\n                      tuningList={TUNINGS}\n                      keyboardShortcuts={keyboardShortcuts}\n                    />\n                  )}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      />\n    );\n  }\n}\n\nexport default InteractiveDemo;\n","import React from 'react';\nimport YouTube from 'react-youtube';\nimport { Piano, MidiNumbers } from 'react-piano';\nimport classNames from 'classnames';\n\nimport DimensionsProvider from './DimensionsProvider';\nimport SoundfontProvider from './SoundfontProvider';\n\n// import audioContext from './audioContext';\n// import Oscillator from './audio/Oscillator';\nimport {\n  getCentsForNote,\n  getFrequencyForNote,\n  getNoteFromOffset,\n  getNoteLabel,\n  CENTS_IN_OCTAVE,\n  TUNINGS,\n  // getMidiNumberForNote,\n} from './noteHelpers';\n\n// const GAIN_VALUE = 0.1;\nconst KARA_TOPRAK_SWITCHES = { 56: -2, 63: -2 };\n\nclass PlaybackDemo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeNotesIndex: 0,\n      isPlaying: false,\n      stopAllNotes: () => console.warn('stopAllNotes not yet loaded'),\n      initialSwitchValues: KARA_TOPRAK_SWITCHES,\n      // oscillator: null,\n    };\n\n    this.playbackIntervalFn = null;\n    this.piano = React.createRef();\n    // console.log(props);\n    // this.oscillator = new Oscillator({\n    //   audioContext: audioContext,\n    //   gain: props.gain,\n    // });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.isPlaying !== this.state.isPlaying) {\n      if (this.state.isPlaying) {\n        this.playbackIntervalFn = setInterval(() => {\n          this.setState({\n            activeNotesIndex: (this.state.activeNotesIndex + 1) % this.props.song.length,\n          });\n        }, 80);\n      } else {\n        clearInterval(this.playbackIntervalFn);\n        this.state.stopAllNotes();\n        this.setState({\n          activeNotesIndex: 0,\n        });\n      }\n    }\n  }\n\n  setPlaying = (value) => {\n    this.setState({ isPlaying: value });\n  };\n\n  render() {\n    const noteRange = {\n      first: MidiNumbers.fromNote('c3'),\n      last: MidiNumbers.fromNote('f5'),\n    };\n    const tuning = TUNINGS[0];\n    return (\n      <div>\n        <div className=\"text-center\">\n          <h2>Can you hear the difference?</h2>\n          <p>\n            Microtones can help composers add more emotional depth to songs.\n            <br /> Try to hear the difference in the popular Anatolian folk song{' '}\n            <a target=\"_blank\" href=\"https://www.youtube.com/watch?v=2cGANgDZPj8\">\n              Kara Toprak by Aşık Veysel\n            </a>{' '}\n            with and without microtones:\n          </p>\n          <div>\n            <button\n              className={'btn btn-outline-info mr-3'}\n              onClick={() => {\n                this.setState({ initialSwitchValues: {} });\n                this.setPlaying(true);\n              }}\n              hidden={this.state.isPlaying}\n            >\n              {this.state.isPlaying ? 'Stop' : 'Play without microtones'}\n            </button>\n            <button\n              className={'btn btn-outline-info'}\n              onClick={() => {\n                this.setState({ initialSwitchValues: KARA_TOPRAK_SWITCHES });\n                this.setPlaying(true);\n              }}\n              hidden={this.state.isPlaying}\n            >\n              {this.state.isPlaying ? 'Stop' : 'Play with microtones'}\n            </button>\n            <button\n              className=\"btn btn-outline-danger\"\n              onClick={() => {\n                this.setPlaying(false);\n              }}\n              hidden={!this.state.isPlaying}\n            >\n              Stop\n            </button>\n          </div>\n        </div>\n        <div className=\"mt-4\">\n          <SoundfontProvider\n            audioContext={this.props.audioContext}\n            instrumentName=\"acoustic_guitar_steel\"\n            // instrumentName=\"electric_piano_2\"\n            // instrumentName=\"banjo\"\n            // instrumentName=\"clarinet\"\n            hostname={this.props.soundfontHostname}\n            onLoad={({ stopAllNotes }) => this.setState({ stopAllNotes })}\n            render={({ isLoading, playNote, stopNote, stopAllNotes }) => (\n              <DimensionsProvider>\n                {({ containerWidth }) => (\n                  <Piano\n                    activeNotes={\n                      this.state.isPlaying ? this.props.song[this.state.activeNotesIndex] : []\n                    }\n                    noteRange={noteRange}\n                    tuning={tuning}\n                    width={containerWidth}\n                    initialSwitchValues={this.state.initialSwitchValues}\n                    playNote={(note) => {\n                      let midiNumber = MidiNumbers.getMidiNumberForNote(note[0], note[1], tuning);\n                      playNote(midiNumber);\n                      // playNote(midiNumber + 7.01955);\n                      playNote(midiNumber + 12);\n                    }}\n                    stopNote={(note) => {\n                      let midiNumber = MidiNumbers.getMidiNumberForNote(note[0], note[1], tuning);\n                      stopNote(midiNumber);\n                      // stopNote(midiNumber + 7.01955);\n                      stopNote(midiNumber + 12);\n                    }}\n                    showCents={true}\n                    disabled={isLoading}\n                    ref={this.piano}\n                    // gain={GAIN_VALUE}\n                  />\n                )}\n              </DimensionsProvider>\n            )}\n          />\n        </div>\n        <div className={'text-center'}>\n          <p className=\"mt-5\">\n            You can listen to the instrumental arrangement by{' '}\n            <a target=\"_blank\" href=\"https://tolgahancogulu.com/\">\n              Tolgahan Çoğulu\n            </a>{' '}\n            and{' '}\n            <a target=\"_blank\" href=\"https://www.sinancemeroglu.com/\">\n              Sinan Cem Eroğlu\n            </a>{' '}\n            on YouTube:\n          </p>\n          <YouTube\n            iframeClassName={'video-container'}\n            videoId={'vvSHpxwxVkM'}\n            style={{ display: 'block', margin: '0 auto' }}\n            opts={{ height: '280', width: '480' }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PlaybackDemo;\n","export var lostWoods = [\n  [65],\n  [69],\n  [71],\n  [],\n  [65],\n  [69],\n  [71],\n  [],\n  [65],\n  [69],\n  [71],\n  [76],\n  [74],\n  [],\n  [71],\n  [72],\n  [71],\n  [67],\n  [64],\n  [],\n  [],\n  [],\n  [],\n  [62],\n  [64],\n  [67],\n  [64],\n  [],\n  [],\n  [],\n  [],\n  [],\n];\n\nlostWoods = lostWoods.map((notes) => notes.map((note) => note - 12));\n\nexport var karaToprak = [\n  // Begin bar\n  [66],\n  [66],\n  [66],\n  [],\n  [66],\n  [66],\n  [66],\n  [66],\n  //\n  [64],\n  [64],\n  [64],\n  [],\n  [64],\n  [64],\n  [64],\n  [64],\n  //\n  [63],\n  [63],\n  [63],\n  [63],\n  [64],\n  [64],\n  [61],\n  [61],\n  //\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [],\n\n  // Begin bar\n  [66],\n  [66],\n  [66],\n  [66],\n  [66],\n  [66],\n  [64],\n  [64],\n  [64],\n  [64],\n  [64],\n  [],\n  [64],\n  [64],\n  [64],\n  [],\n  [63],\n  [63],\n  [63],\n  [63],\n  [63],\n  [63],\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [],\n\n  // Begin bar\n  [66],\n  [66],\n  [66],\n  [],\n  [66],\n  [66],\n  [66],\n  [],\n  //\n  [64],\n  [64],\n  [64],\n  [],\n  [64],\n  [64],\n  [64],\n  [],\n  //\n  [63],\n  [63],\n  [63],\n  [63],\n  [64],\n  [64],\n  [61],\n  [61],\n  //\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [],\n\n  // Begin bar\n  [66],\n  [66],\n  [66],\n  [66],\n  [66],\n  [66],\n  [64],\n  [64],\n  [64],\n  [64],\n  [64],\n  [],\n  [64],\n  [64],\n  [64],\n  [],\n  [63],\n  [63],\n  [63],\n  [63],\n  [63],\n  [63],\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [61],\n  [],\n\n  // Begin bar\n  [64],\n  [64],\n  [64],\n  [],\n  [64],\n  [64],\n  [63],\n  [63],\n  //\n  [64],\n  [64],\n  [64],\n  [],\n  [64],\n  [64],\n  [63],\n  [63],\n  //\n  [64],\n  [64],\n  [64],\n  [64],\n  [64],\n  [64],\n  [59],\n  [59],\n  //\n  [59],\n  [59],\n  [59],\n  [59],\n  [59],\n  [59],\n  [59],\n  [59],\n  [59],\n  [],\n\n  // Begin bar\n  [61],\n  [61],\n  [61],\n  [61],\n  [57],\n  [57],\n  [57],\n  [57],\n  //\n  [59],\n  [59],\n  [59],\n  [59],\n  [57],\n  [57],\n  [57],\n  [],\n  //\n  [57],\n  [57],\n  [56],\n  [56],\n  [56],\n  [],\n  [56],\n  [56],\n  //\n  [54],\n  [54],\n  [54],\n  [54],\n  [54],\n  [54],\n  [54],\n  [54],\n  [54],\n  [],\n\n  // Begin bar\n  [61],\n  [61],\n  [61],\n  [61],\n  [57],\n  [57],\n  [57],\n  [57],\n  //\n  [59],\n  [59],\n  [59],\n  [59],\n  [57],\n  [57],\n  [57],\n  [],\n  //\n  [57],\n  [57],\n  [56],\n  [56],\n  [56],\n  [],\n  [56],\n  [56],\n  //\n  [54],\n  [54],\n  [54],\n  [54],\n  [54],\n  [54],\n  [54],\n  [54],\n  [54],\n  [],\n\n  // Begin bar\n  [56],\n  [56],\n  [57],\n  [57],\n  [59],\n  [59],\n  [59],\n  [],\n  //\n  [59],\n  [59],\n  [59],\n  [],\n  [59],\n  [59],\n  [59],\n  [],\n  //\n  [59],\n  [59],\n  [59],\n  [59],\n  [59],\n  [],\n  [56],\n  [56],\n  //\n  [57],\n  [57],\n  [56],\n  [56],\n  [54],\n  [54],\n  [54],\n  [54],\n\n  // Begin bar\n  [57],\n  [57],\n  [57],\n  [57],\n  [],\n  [56],\n  [],\n  [56],\n  //\n  [56],\n  [56],\n  [56],\n  [56],\n  [56],\n  [56],\n  [],\n  [56],\n  [56],\n  //\n  [56],\n  [56],\n  [56],\n  [],\n  [54],\n  [],\n  [54],\n  [54],\n  [54],\n  [54],\n  //\n  [51],\n  [51],\n  [52],\n  [52],\n  [54],\n  [54],\n  [54],\n  [54],\n  [54],\n  [],\n  [54],\n  [],\n  [54],\n  [54],\n  [54],\n  [],\n  [51],\n  [51],\n  [52],\n  [52],\n  [54],\n  [54],\n  [54],\n  [54],\n  [54],\n  [54],\n  [54],\n  [54],\n  [],\n  [],\n\n  // // Begin bar\n  [],\n  [],\n  [],\n  [],\n  [],\n  [],\n  [],\n  [],\n  // [],\n  // [],\n  // [],\n  // [],\n  // //\n  // [],\n  // [],\n  // [],\n  // [],\n  // [],\n  // [],\n  // [],\n  // [],\n  // //\n  // [],\n  // [],\n  // [],\n  // [],\n  // [],\n  // [],\n  // [],\n  // [],\n  // //\n  // [],\n  // [],\n  // [],\n  // [],\n  // [],\n  // [],\n  // [],\n  // [],\n];\n","import React from 'react';\nimport 'react-piano/dist/styles.css';\n\nimport Header from './Header';\nimport Footer from './Footer';\nimport InteractiveDemo from './InteractiveDemo';\nimport PlaybackDemo from './PlaybackDemo';\nimport { karaToprak } from './songs';\nimport './App.css';\n\nconst audioContext = new (window.AudioContext || window.webkitAudioContext)();\nconst soundfontHostname = 'https://d1pzp51pvbm36p.cloudfront.net';\n\nfunction Installation() {\n  return (\n    <div className=\"text-center\">\n      <h2>What is this?</h2>\n      <p>\n            A browser-based Piano for trying out various microtonal scales from around the world.<br/>\n            Set the keys to different tunings and adjust the microtones using the switches that\n            correspond to each key.\n          </p>\n\n      {/* <p className=\"mt-4\">Install with yarn or npm:</p>\n      <p className=\"mt-3\">\n        <code className=\"p-2 text-dark bg-yellow\">yarn add react-piano</code>\n      </p>\n      <div className=\"mt-5\">\n        <a className=\"btn btn-info btn-lg\" href=\"https://github.com/kevinsqi/react-piano\">\n          View docs on Github\n        </a>\n      </div> */}\n    </div>\n  );\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"container\">\n          <div className=\"mt-5 disable-select-mobile\">\n            {/* <div className=\"col-md-8 offset-md-2\"> */}\n              <InteractiveDemo audioContext={audioContext} soundfontHostname={soundfontHostname} />\n            {/* </div> */}\n          </div>\n          <hr className=\"mt-5\" />\n          <div className=\"row mt-5\">\n            <div className=\"col\">\n              <Installation />\n            </div>\n          </div>\n          <hr className=\"mt-5\" />\n          <div className=\"row mt-5\">\n            <div className=\"col-md-8 offset-md-2\">\n              <PlaybackDemo\n                audioContext={audioContext}\n                soundfontHostname={soundfontHostname}\n                song={karaToprak}\n              />\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}